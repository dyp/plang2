A : THEORY
BEGIN

T : TYPE = {c: nat | (c >= 1) AND (c <= 10)}
En : TYPE = {red, green, blue}
Lst : TYPE = list[nat]
a : VAR nat = 0
b : VAR nat = bv2nat(NOTÂ nat2bv(a))
arr(d: {f: nat | (f >= 1) AND (f <= 10)}) : nat = COND d = 1 -> 1, d = 2 -> 2 ENDCOND
arr1 : VAR [{g: nat | (g >= 1) AND (g <= 10)}, {h: nat | (h >= 1) AND (h <= 10)} -> nat] = (LAMBDA (i: int, j: int) : COND (((i >= 1 AND i <= 5) AND (j >= 1 AND j <= 2))) -> 1, (((i >= 6 AND i <= 30) AND (j >= 3 AND j <= 5))) -> 2, ELSE -> 3 ENDCOND)
e : VAR nat = restrict[{f: nat | (f >= 1) AND (f <= 10)}, 1, nat](arr)
l : VAR list[nat] = cons(1, cons(2, cons(3, null)))
s : VAR setof[nat] = {k: nat | k = 1 OR k = 2 OR k = 3}

LEMMA
    FORALL (t: {c: nat | (c >= 1) AND (c <= 10)}): t <= 100

END A

