/*

<test>
    //D/PredicateBody/If/IfElse/If/IfBody/Multiassignment
    //D/PredicateBody/If/IfElse/If/IfBody/Jump
    //D/PredicateBody/Stmt/StmtLabel
    //D/PredicateBody/If/IfElse/If/IfElse/Call
    //D/PredicateBody/If/IfBody/Call
    //F/PredicateBody/Multiassignment
    //F/PredicateBody/Jump
  ! //FF/PredicateBody/Multiassignment
  ! //FF/PredicateBody/Jump
    //G//SwitchCaseBody/Multiassignment
    //G//SwitchCaseBody/Jump
    //G//SwitchDefault/Multiassignment
    //G//SwitchDefault/Jump
</test>

*/

foo(:);
D(nat a, nat b: nat c) {
    if (a = b) {
        foo(:);
    }
    else {
        if (a < b) {
            D(a, b - a: c);
        }
        else {
            D(a - b, b: c);
            a = a;
        }
    }
}

F(nat a, nat b: nat c) {
    F(b, a: c);
}

FF(nat a, nat b: nat e #1: nat c, nat d #2) {
    FF(a, b: e: d, c);
}

G(nat a, nat b: nat c) {
    switch(a) {
        case 1: { G(a+1, b: c) }
        case 2: { G(a, b+1: c); a = a }
        default: { G(a, b: c) }
    }
}

